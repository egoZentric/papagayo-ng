# BEGIN CUT -------------------------------------------------------------------
#!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-
#
# generated by wxGlade 0.7.0 on Sat Apr 16 23:14:31 2016
#

# This is an automatically generated file.
# Manual changes will be overwritten without warning!


# UNUSED MODULE
##import warnings
# only used by wxversion (now discontinued)


# as of wxPython v4.0.3 it seems that all is working (few depreciation warnings to be heeded)

# UNSUPPORTED MODULE
##try:
##
##    # UNSUPPORTED MODULE the wxversion module is Discontinued
##    # and so this import will always throe an exception
##    import wxversion
##
##    if wxversion.checkInstalled('2.8'):
##        wxversion.select('2.8')
##    else:
##        warnings.warn("You are running an unsupported Version of wx. Please test this with wx Version 2.8 before reporting errors!")
##except ImportError:
##    warnings.warn("You either don't have wx installed or you are using wxphoenix. Please test this with wx Version 2.8 before reporting errors!")

# REFACTOR to \\gui\lipsync_app_class.py
##import wx
###   wx.App
###   wx.ID_ANY
###   wx.PYAPP_ASSERT_SUPPRESS
###   wx.InitAllImageHandlers()
# END OF REFACTOR
# END CUT ---------------------------------------------------------------------

import os
#   os.path.abspath() - normalize and absolutize given file name.and path.

import sys
#   sys.exit() - terminate script execution with optional message.
#   sys.argv[] - list of command line arguments passed. [0] is executed name.



# BEGIN CUT -------------------------------------------------------------------
# ### TODO : feature request : Add international support.

# UNUSED MODULE
##import gettext
##    Internationalization and localization support.
##
##    https://docs.python.org/3/library/gettext.html?highlight=gettext#module-gettext
##
##    This module provides internationalization (I18N) and localization (L10N)
##    support for a Python program by providing an interface to the GNU gettext
##    message catalog library. I18N refers to the operation by which a program is
##    made aware of multiple   languages.  L10N refers to the adaptation of your
##    program, once internationalized, to the local language and cultural habits.
##
##    [As far as i can tell, This is automatically inserted by wxGlade code generator
##    and is not used anywhere in this projecy (yet) ]\eZ
# ### TODO : strip _() message functions - this is a job for grep x-d:-)
# END CUT ---------------------------------------------------------------------


from gui.lipsync_app_class import LipsyncApp

# REFACTOR the app class to a separate script -> \\gui\lipsync_app_class.py
##
##from LipsyncFrame import LipsyncFrame
##
##class LipsyncApp(wx.App):
##    def OnInit(self):
##        wx.InitAllImageHandlers()
##        try:
##            self.SetAssertMode(wx.PYAPP_ASSERT_SUPPRESS)
##        except AttributeError:
##            self.SetAssertMode(wx.APP_ASSERT_SUPPRESS)
##        self.mainFrame = LipsyncFrame(None, wx.ID_ANY, "")
##        self.SetTopWindow(self.mainFrame)
##        self.mainFrame.Show()
##        return 1
##
### end of class LipsyncApp
# END OF REFACTOR
# END CUT ---------------------------------------------------------------------


if __name__ == "__main__":

# BEGIN CUT -------------------------------------------------------------------
##    # UNUSED module gettext ####################################################
##    # Setup for GNU (I18N) and (L10N)
##    try:
##        gettext.install("papagayo-ng", unicode=True)
##    except TypeError:
##        gettext.install("papagayo-ng")
##    # END OF UNUSED BLOCK ######################################################
# END CUT ---------------------------------------------------------------------


    # Create an instance of the application.
    ##papagayo = LipsyncApp(0)  ### TODO verify passed zero necesary ???
    papagayo = LipsyncApp(redirect=False)
    if not papagayo:
        gracefully = "FAIL: Could not create application."
        sys.exit(gracefully)

    # Propergate the object reference to this application class instance.
    ### TODO use reference by self, super, or argument ???
    papagayo.mainFrame.TheApp = papagayo
    papagayo.mainFrame.waveformView.TheApp = papagayo

    # Test and handle any command line parameters.
    ### TODO - refactor argv handling into the app class.init
    if len(sys.argv) > 1:
        # expecting audio|text|project|lip(s)|breakdowns|...??? file 
        ### TODO - what kinds of files are accepted ???
        ### TODO - how are batch files handled ???
        file_spec = os.path.abspath(sys.argv[1])
        ### TODO test file existance and readbility
        papagayo.mainFrame.Open(file_spec)

    # Listen for events and handle them ... foreverandever.
    papagayo.MainLoop()

# END OF FILE #################################################################